/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.3/userguide/tutorial_java_projects.html
 */
plugins {
    // Apply the java plugin to add support for Java
    id 'java'
    
    // Apply the graal plugin to allow for AOT-compilation and native images
    id 'com.palantir.graal' version '0.6.0-30-gade71a8'

    // Apply the application plugin to add support for building a CLI application
    id 'application'
}

group = 'ce2001.sem11920.group3'

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // This dependency is used by the application.
    implementation 'info.picocli:picocli:4.0.4'
    annotationProcessor 'com.github.bsideup.jabel:jabel-javac-plugin:0.2.0'
    annotationProcessor 'info.picocli:picocli-codegen:4.0.4'
    implementation 'com.google.guava:guava:28.0-jre'
    implementation 'org.apache.commons:commons-csv:1.7'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

application {
    // Define the main class for the application
    mainClassName = 'Lab4.App'
}

compileJava {
    options.compilerArgs = ['--release', '8']
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

graal {
    graalVersion '19.2.1'
    mainClass 'Lab4.App'
    outputName 'Lab4'
}

task benchmarkNoJitShenandoah(type: JavaExec) {
    group = 'Benchmarking'
    description = ('Run the benchmark application without JIT using the ' +
                   'Shenandoah low-latency GC')

    classpath = sourceSets.main.runtimeClasspath
    main = 'Lab4.App'
    jvmArgs = ['-XX:+AlwaysPreTouch', '-Xms = -Xmx',
               '-XX:+UseTransparentHugePages', '-XX:-UseBiasedLocking',
               '-XX:+DisableExplicitGC', '-XX:+UseNUMA',
               '-Djava.compiler=NONE']
    maxHeapSize = '4G'
    minHeapSize = '4G'
}

task benchmarkJitShenandoah(type: JavaExec) {
    group = 'Benchmarking'
    description = ('Run the benchmark application with JIT with using the ' +
                   'Shenandoah low-latency GC')

    classpath = sourceSets.main.runtimeClasspath
    main = 'Lab4.App'
    jvmArgs = ['-XX:+AlwaysPreTouch', '-Xms = -Xmx',
               '-XX:+UseTransparentHugePages', '-XX:-UseBiasedLocking',
               '-XX:+DisableExplicitGC', '-XX:+UseNUMA']
    maxHeapSize = '4G'
    minHeapSize = '4G'
}
